{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/dkodagoda/Desktop/test-project-login/src/context/AuthContext.tsx\";\nimport { createContext, useContext, useState } from \"react\";\nimport { auth } from \"../components/firebase\";\nimport { useRouter } from \"next/router\"; // Types -->\n\n// Auth Context Default values -->\nconst authContextDefaultValues = {\n  user: false,\n  login: () => {},\n  logout: () => {},\n  signup: () => {}\n}; // Auth Context -->\n\nconst AuthContext = /*#__PURE__*/createContext(authContextDefaultValues); // Auth hook -->\n\nexport function useAuth() {\n  return useContext(AuthContext);\n} // Auth Provider -->\n\nexport function AuthProvider({\n  children\n}) {\n  const {\n    0: user,\n    1: setUser\n  } = useState(false);\n  const router = useRouter();\n\n  const login = (email, password) => {\n    console.log(\"email,password: =-->\", email, password);\n    auth.signInWithEmailAndPassword(email, password).then(data => {\n      setUser(true);\n      console.log(user);\n      router.push(\"/\");\n    }).catch(err => {\n      console.log(err);\n    });\n  };\n\n  const logout = () => {\n    setUser(false);\n  };\n\n  const value = {\n    user,\n    login,\n    logout\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n      value: value,\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}","map":{"version":3,"sources":["/Users/dkodagoda/Desktop/test-project-login/src/context/AuthContext.tsx"],"names":["createContext","useContext","useState","auth","useRouter","authContextDefaultValues","user","login","logout","signup","AuthContext","useAuth","AuthProvider","children","setUser","router","email","password","console","log","signInWithEmailAndPassword","then","data","push","catch","err","value"],"mappings":";;;AAAA,SAASA,aAAT,EAAwBC,UAAxB,EAA+CC,QAA/C,QAA+D,OAA/D;AACA,SAASC,IAAT,QAAqB,wBAArB;AACA,SAASC,SAAT,QAA0B,aAA1B,C,CAEA;;AAYA;AACA,MAAMC,wBAAsC,GAAG;AAC7CC,EAAAA,IAAI,EAAE,KADuC;AAE7CC,EAAAA,KAAK,EAAE,MAAM,CAAE,CAF8B;AAG7CC,EAAAA,MAAM,EAAE,MAAM,CAAE,CAH6B;AAI7CC,EAAAA,MAAM,EAAE,MAAM,CAAE;AAJ6B,CAA/C,C,CAOA;;AACA,MAAMC,WAAW,gBAAGV,aAAa,CAAeK,wBAAf,CAAjC,C,CAEA;;AACA,OAAO,SAASM,OAAT,GAAmB;AACxB,SAAOV,UAAU,CAACS,WAAD,CAAjB;AACD,C,CAED;;AACA,OAAO,SAASE,YAAT,CAAsB;AAAEC,EAAAA;AAAF,CAAtB,EAA4C;AACjD,QAAM;AAAA,OAACP,IAAD;AAAA,OAAOQ;AAAP,MAAkBZ,QAAQ,CAAU,KAAV,CAAhC;AACA,QAAMa,MAAM,GAAGX,SAAS,EAAxB;;AAEA,QAAMG,KAAK,GAAG,CAACS,KAAD,EAAgBC,QAAhB,KAAqC;AACjDC,IAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ,EAAoCH,KAApC,EAA2CC,QAA3C;AACAd,IAAAA,IAAI,CACDiB,0BADH,CAC8BJ,KAD9B,EACqCC,QADrC,EAEGI,IAFH,CAESC,IAAD,IAAe;AACnBR,MAAAA,OAAO,CAAC,IAAD,CAAP;AACAI,MAAAA,OAAO,CAACC,GAAR,CAAYb,IAAZ;AACAS,MAAAA,MAAM,CAACQ,IAAP,CAAY,GAAZ;AACD,KANH,EAOGC,KAPH,CAOUC,GAAD,IAAc;AACnBP,MAAAA,OAAO,CAACC,GAAR,CAAYM,GAAZ;AACD,KATH;AAUD,GAZD;;AAcA,QAAMjB,MAAM,GAAG,MAAM;AACnBM,IAAAA,OAAO,CAAC,KAAD,CAAP;AACD,GAFD;;AAIA,QAAMY,KAAK,GAAG;AACZpB,IAAAA,IADY;AAEZC,IAAAA,KAFY;AAGZC,IAAAA;AAHY,GAAd;AAMA,sBACE;AAAA,2BACE,QAAC,WAAD,CAAa,QAAb;AAAsB,MAAA,KAAK,EAAEkB,KAA7B;AAAA,gBAAqCb;AAArC;AAAA;AAAA;AAAA;AAAA;AADF,mBADF;AAKD","sourcesContent":["import { createContext, useContext, ReactNode, useState } from \"react\";\nimport { auth } from \"../components/firebase\";\nimport { useRouter } from \"next/router\";\n\n// Types -->\ntype TAuthContext = {\n  user: boolean;\n  login: (email: string, password: string) => void;\n  logout: (email: string, password: string) => void;\n  signup: (email: string, password: string) => void;\n};\n\ntype TProps = {\n  children: ReactNode;\n};\n\n// Auth Context Default values -->\nconst authContextDefaultValues: TAuthContext = {\n  user: false,\n  login: () => {},\n  logout: () => {},\n  signup: () => {},\n};\n\n// Auth Context -->\nconst AuthContext = createContext<TAuthContext>(authContextDefaultValues);\n\n// Auth hook -->\nexport function useAuth() {\n  return useContext(AuthContext);\n}\n\n// Auth Provider -->\nexport function AuthProvider({ children }: TProps) {\n  const [user, setUser] = useState<boolean>(false);\n  const router = useRouter();\n\n  const login = (email: string, password: string) => {\n    console.log(\"email,password: =-->\", email, password);\n    auth\n      .signInWithEmailAndPassword(email, password)\n      .then((data: any) => {\n        setUser(true);\n        console.log(user);\n        router.push(\"/\");\n      })\n      .catch((err: any) => {\n        console.log(err);\n      });\n  };\n\n  const logout = () => {\n    setUser(false);\n  };\n\n  const value = {\n    user,\n    login,\n    logout,\n  };\n\n  return (\n    <>\n      <AuthContext.Provider value={value}>{children}</AuthContext.Provider>\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}